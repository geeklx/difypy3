app:
  description: 诗句封面+语音播报
  icon: 🤖
  icon_background: '#FFEAD5'
  mode: advanced-chat
  name: AI-硅基流动-唐诗宋词文生图音
  use_icon_as_answer_icon: true
dependencies:
- current_identifier: null
  type: package
  value:
    plugin_unique_identifier: langgenius/deepseek:0.0.5@fd6efd37c2a931911de8ab9ca3ba2da303bef146d45ee87ad896b04b36d09403
kind: app
version: 0.2.0
workflow:
  conversation_variables: []
  environment_variables:
  - description: ''
    id: 3fc0119f-5152-4901-bda0-c151ab59e739
    name: sid
    selector:
    - env
    - sid
    value: sk-zkzjdebhrphvgbxnawhnfdlibizlovdlhpqmpmbjlsnvismc
    value_type: string
  features:
    file_upload:
      allowed_file_extensions:
      - .JPG
      - .JPEG
      - .PNG
      - .GIF
      - .WEBP
      - .SVG
      allowed_file_types:
      - image
      allowed_file_upload_methods:
      - local_file
      - remote_url
      enabled: false
      fileUploadConfig:
        audio_file_size_limit: 50
        batch_count_limit: 5
        file_size_limit: 15
        image_file_size_limit: 10
        video_file_size_limit: 100
        workflow_file_upload_limit: 10
      image:
        enabled: false
        number_limits: 3
        transfer_methods:
        - local_file
        - remote_url
      number_limits: 3
    opening_statement: ''
    retriever_resource:
      enabled: true
    sensitive_word_avoidance:
      enabled: false
    speech_to_text:
      enabled: false
    suggested_questions: []
    suggested_questions_after_answer:
      enabled: false
    text_to_speech:
      enabled: false
      language: ''
      voice: ''
  graph:
    edges:
    - data:
        sourceType: start
        targetType: llm
      id: 1736693758435-llm
      source: '1736693758435'
      sourceHandle: source
      target: llm
      targetHandle: target
      type: custom
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1736693844224-source-1736694050685-target
      source: '1736693844224'
      sourceHandle: source
      target: '1736694050685'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: template-transform
      id: 1736694050685-source-1736694293233-target
      source: '1736694050685'
      sourceHandle: source
      target: '1736694293233'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: template-transform
        targetType: answer
      id: 1736694293233-source-answer-target
      selected: false
      source: '1736694293233'
      sourceHandle: source
      target: answer
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: answer
      id: 1736694775201-source-answer-target
      source: '1736694775201'
      sourceHandle: source
      target: answer
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: http-request
      id: llm-source-1741675549599-target
      source: llm
      sourceHandle: source
      target: '1741675549599'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: http-request
        targetType: code
      id: 1741675549599-source-1736694775201-target
      source: '1741675549599'
      sourceHandle: source
      target: '1736694775201'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: llm
        targetType: code
      id: llm-source-1741676066386-target
      source: llm
      sourceHandle: source
      target: '1741676066386'
      targetHandle: target
      type: custom
      zIndex: 0
    - data:
        isInIteration: false
        sourceType: code
        targetType: http-request
      id: 1741676066386-source-1736693844224-target
      source: '1741676066386'
      sourceHandle: source
      target: '1736693844224'
      targetHandle: target
      type: custom
      zIndex: 0
    nodes:
    - data:
        desc: ''
        selected: false
        title: 开始
        type: start
        variables: []
      height: 54
      id: '1736693758435'
      position:
        x: -225.69878251442776
        y: 283.5130164500297
      positionAbsolute:
        x: -225.69878251442776
        y: 283.5130164500297
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        context:
          enabled: false
          variable_selector: []
        desc: ''
        memory:
          query_prompt_template: '{{#sys.query#}}'
          role_prefix:
            assistant: ''
            user: ''
          window:
            enabled: false
            size: 10
        model:
          completion_params:
            temperature: 0.7
          mode: chat
          name: deepseek-chat
          provider: langgenius/deepseek/deepseek
        prompt_template:
        - id: 29d22832-cc83-4249-ae12-ebcade1d3da1
          role: system
          text: '# Role: 唐诗宋词专家


            ## Profile


            - 专长: 精通唐诗宋词创作和鉴赏

            - 知识储备: 熟知各朝代诗人的生平、风格和代表作品

            - 创作能力: 能模仿不同诗人的风格进行创作


            ## Rules


            1. 严格遵循古典诗词的格律和韵律要求

            2. 创作内容要符合指定诗人的风格特点

            3. 不得抄袭已有的诗词作品

            4. 回答要简洁明了,直接给出创作的诗句


            ## Workflow


            1. 理解用户提供的诗人名字

            2. 回忆该诗人的创作风格和常用主题

            3. 根据诗人特点,创作一首符合其风格的诗句

            4. 直接输出创作的诗句,无需额外解释

            5.用中文来回答


            ## Initialization


            作为一位博学多才的唐诗宋词专家,我随时准备为您创作优美的诗句。请告诉我您想要哪位诗人的作品风格,我会为您量身定制一首诗。'
        selected: false
        title: 唐诗宋词专家提示词
        type: llm
        variables: []
        vision:
          enabled: false
      height: 90
      id: llm
      position:
        x: 94.57258129550706
        y: 283.5130164500297
      positionAbsolute:
        x: 94.57258129550706
        y: 283.5130164500297
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        answer: '{{#1736694293233.output#}}

          {{#1736694775201.result#}}'
        desc: ''
        selected: false
        title: 直接回复
        type: answer
        variables: []
      height: 124
      id: answer
      position:
        x: 2273
        y: 261
      positionAbsolute:
        x: 2273
        y: 261
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config:
            api_key: 341955175059165819.0C7KtiQIRIsXxEKB9XHcHzUWGWA641FG
            header: X-API-Key
            type: custom
          type: api-key
        body:
          data:
          - id: key-value-35
            key: ''
            type: text
            value: "{\n    \"width\": 1024,\n    \"height\": 1024,\n    \"backgroundColor\"\
              : \"#ffffff\",\n    \"borderColor\": \"#ffffff\",\n    \"borderWidth\"\
              : 0,\n    \"borderRadius\": 0,\n    \"borderTopLeftRadius\": 0,\n  \
              \  \"borderTopRightRadius\": 0,\n    \"borderBottomLeftRadius\": 0,\n\
              \    \"borderBottomRightRadius\": 0,\n    \"texts\": [\n        {\n\
              \            \"x\": 224,\n            \"y\": 114,\n            \"text\"\
              : \"{{#llm.text#}}\",\n            \"width\": 600,\n            \"font\"\
              : \"Alibaba-PuHuiTi-Heavy\",\n            \"fontSize\": 70,\n      \
              \      \"lineHeight\": 80,\n            \"lineSpacing\": 1.3,\n    \
              \        \"color\": \"#FFA500\",\n            \"textAlign\": \"left\"\
              ,\n            \"zIndex\": 1\n        },\n\t\t{\n            \"x\":\
              \ 880,\n            \"y\": 1000,\n            \"text\": \"长按识别二维码，扫描获取源码\"\
              ,\n            \"font\": \"jiangxizhuokai\",\n            \"fontSize\"\
              : 22,\n            \"color\": \"#FFFFFF\",\n            \"width\": 580,\n\
              \            \"textAlign\": \"center\",\n            \"zIndex\": 1\n\
              \        }\n    ],\n    \"images\": [\n        {\n            \"x\"\
              : 0,\n            \"y\": 0,\n            \"width\": 1024,\n        \
              \    \"height\": 1024,\n            \"url\": \"{{#1741676066386.result#}}\"\
              ,\n            \"borderColor\": \"#000000\",\n            \"borderWidth\"\
              : 0,\n            \"borderRadius\": 0,\n            \"borderTopLeftRadius\"\
              : 0,\n            \"borderTopRightRadius\": 0,\n            \"borderBottomLeftRadius\"\
              : 0,\n            \"borderBottomRightRadius\": 0,\n            \"zIndex\"\
              : 0\n        }\n    ],\n\t\"qrcodes\": [\n        {\n            \"\
              x\": 808,\n            \"y\": 800,\n            \"size\": 200,\n   \
              \         \"content\": \"https://mypicture-1258720957.cos.ap-nanjing.myqcloud.com/%E4%B8%8B%E8%BD%BD.png\"\
              ,\n            \"foregroundColor\": \"#000\",\n            \"backgroundColor\"\
              : \"#fff\",\n            \"zIndex\": 1\n        }\n    ]\n  }"
          type: json
        desc: ''
        headers: Content-Type:application/json
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: HTTP 请求
        type: http-request
        url: https://api.imgrender.cn/open/v1/pics
        variables: []
      height: 136
      id: '1736693844224'
      position:
        x: 868.6211113316426
        y: 550
      positionAbsolute:
        x: 868.6211113316426
        y: 550
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import json  \n  \ndef main(req: str) -> dict:  \n    # 解析JSON字符串（该字符串已经是请求体内容）\
          \  \n    data = json.loads(req)  \n      \n    # 从解析后的数据中提取url  \n    url\
          \ = data['data']['url']  \n      \n    # 创建并返回结果字典  \n    return {  \n \
          \       \"result\": url  # 封面图片的URL  \n    }"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 获取封面图URl
        type: code
        variables:
        - value_selector:
          - '1736693844224'
          - body
          variable: req
      height: 54
      id: '1736694050685'
      position:
        x: 1518.9741096057385
        y: 558.0408884849793
      positionAbsolute:
        x: 1518.9741096057385
        y: 558.0408884849793
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        desc: ''
        selected: false
        template: '![封面图]({{ arg1 }})'
        title: 模板转换
        type: template-transform
        variables:
        - value_selector:
          - '1736694050685'
          - result
          variable: arg1
      height: 54
      id: '1736694293233'
      position:
        x: 1913
        y: 528
      positionAbsolute:
        x: 1913
        y: 528
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "def main(arg1: str) -> str:\n    # 首先解析外层的 JSON 字符串\n    data = json.loads(arg1)\n\
          \    filename=data['filename']\n    url=data['output_path']\n    markdown_result\
          \ = f\"<audio controls><source src='{url}' type='audio/mpeg'>{filename}</audio>\"\
          \n    return {\"result\": markdown_result} "
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 文字转音频文件处理
        type: code
        variables:
        - value_selector:
          - '1741675549599'
          - body
          variable: arg1
      height: 54
      id: '1736694775201'
      position:
        x: 848.6470017259044
        y: 97.42388294050997
      positionAbsolute:
        x: 848.6470017259044
        y: 97.42388294050997
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        authorization:
          config: null
          type: no-auth
        body:
          data:
          - id: key-value-17
            key: ''
            type: text
            value: '{

              "model":"FunAudioLLM/CosyVoice2-0.5B",

              "input":"{{#llm.text#}}",

              "voice":"FunAudioLLM/CosyVoice2-0.5B:david"

              }'
          type: json
        desc: ''
        headers: ''
        method: post
        params: ''
        retry_config:
          max_retries: 3
          retry_enabled: true
          retry_interval: 100
        selected: false
        timeout:
          max_connect_timeout: 0
          max_read_timeout: 0
          max_write_timeout: 0
        title: 硅基流动-音频
        type: http-request
        url: http://g13.geekaiapp.icu/api/gjld/audio
        variables: []
      height: 136
      id: '1741675549599'
      position:
        x: 503.68406943530556
        y: 82.49080432554851
      positionAbsolute:
        x: 503.68406943530556
        y: 82.49080432554851
      selected: true
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    - data:
        code: "import requests\nimport json\n\n\ndef main(prompt: str, apikey: str)\
          \ -> dict:\n    # 设置请求的URL和Headers\n    url = \"https://api.siliconflow.cn/v1/image/generations\"\
          \n    headers = {\n        \"accept\": \"application/json\",\n        \"\
          authorization\": f\"Bearer {apikey}\",\n        \"content-type\": \"application/json\"\
          \n    }\n\n    # 定义请求的payload数据\n    data = {\n        \"model\": \"black-forest-labs/FLUX.1-schnell\"\
          ,\n        \"prompt\": prompt,\n        \"image_size\": \"1024x1024\"\n\
          \    }\n\n    # 发送POST请求\n    response = requests.post(url, headers=headers,\
          \ data=json.dumps(data))\n\n    # 提取结果并返回\n    if response.status_code ==\
          \ 200:\n        result = response.json()[\"images\"][0][\"url\"]\n     \
          \   markdown_result = f\"![ai]({result})\"\n        return {\"result\":\
          \ result}\n    else:\n        return {\"error\": f\"Error: {response.status_code},\
          \ {response.text}\"}\n"
        code_language: python3
        desc: ''
        outputs:
          result:
            children: null
            type: string
        selected: false
        title: 硅基流动-图片
        type: code
        variables:
        - value_selector:
          - llm
          - text
          variable: prompt
        - value_selector:
          - env
          - sid
          variable: apikey
      height: 54
      id: '1741676066386'
      position:
        x: 485.6583215468411
        y: 583.5278720349495
      positionAbsolute:
        x: 485.6583215468411
        y: 583.5278720349495
      selected: false
      sourcePosition: right
      targetPosition: left
      type: custom
      width: 244
    viewport:
      x: 22.031400905782903
      y: 46.18271861864798
      zoom: 0.8705505632961241
